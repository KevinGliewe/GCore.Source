name: CD

on:
  push:
    branches:
      - master

jobs:
  bump:
    name: Bump tag version
    runs-on: ubuntu-latest
    outputs:
      newtag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version and push tag/create release point
        uses: anothrNick/github-tag-action@1.39.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
        id: bump_version

  build:
    name: Build, Pack and Deploy
    runs-on: windows-latest
    needs: bump
    strategy:
      matrix:
        runtime: 
          #- {'linux-x64', 'win-x64', 'osx-x64']  # Runtimes
          - {name: 'linux-x64', extension: ''}
          - {name: 'win-x64', extension: '.exe'}
          - {name: 'osx-x64', extension: ''}
        project: ['GCore.Source.Cli', 'GCore.Source.JsonClassGenerator.Cli']  # Projects to build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.9'

      - name: Update Version
        run: python scripts/update_version.py "${{ needs.bump.outputs.newtag }}"

      - name: Install .NET (v8.0)
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
          dotnet-quality: 'preview'

      - name: Pack
        run: |
          dotnet nuget locals all --clear
          dotnet pack --configuration Release --output pack
      
      - name: Build CLI Tools
        run: /
          dotnet publish .\src\${{ matrix.project }}\${{ matrix.project }}.csproj -r ${{ matrix.runtime.name }} -c Release -f net8.0 -p:PublishSingleFile=true --self-contained true -p:PublishReadyToRun=true -o publish

      - name: Zip CLI Tools
        run: |
          7z a -tzip publish\${{ matrix.project }}${{ matrix.runtime.extension }}.zip publish\${{ matrix.project }}${{ matrix.runtime.extension }}

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: publish\${{ matrix.project }}${{ matrix.runtime.extension }}.zip
          tag: ${{ needs.bump.outputs.newtag }}
          overwrite: true

      - name: Deploy GitHub-Nuget
        run: |
          dotnet nuget push pack\*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

      - name: Deploy Nuget
        run: |
          dotnet nuget push pack\*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source nuget.org

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pack\*.nupkg
          tag: ${{ needs.bump.outputs.newtag }}
          overwrite: true
          file_glob: true

  doc:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - uses: nikeee/docfx-action@v1.0.0
        name: Build Documentation
        with:
          args: doc/docfx/docfx.json
        
      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.5.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: doc/docfx/_site
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'